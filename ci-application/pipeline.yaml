apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: pacman-git
    app.kubernetes.io/name: pacman-git
    pipeline.openshift.io/runtime: nodejs
    pipeline.openshift.io/runtime-version: 16-ubi8
    pipeline.openshift.io/type: kubernetes
  name: pacman
spec:
  params:
    ## repository parameters
  - name: GIT_REPO
    type: string
  - name: GIT_REVISION
    default: ""
    type: string
    ## Image build parameters
  - name: IMAGE_NAME 
    type: string
  - name: PATH_CONTEXT
    default: .
    type: string
  - name: STORAGE_DRIVER
    type: string
 # - name: VERSION
 #   default: 16-ubi8
 #   type: string
    ## Image validation parameters
  - name: acs_central_endpoint              
    type: string
  - name: acs_api_token                     
    type: string
  - name: roxctl-output-format             
    type: string
  tasks:
##------------------------------------------------------------------
# Fetch source to build
##------------------------------------------------------------------
  - name: fetch-repository
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REVISION)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
##------------------------------------------------------------------
# Build Node.JS application
##------------------------------------------------------------------
#  - name: build
#    params:
#    - name: IMAGE
#      value: $(params.IMAGE_NAME)
#    - name: TLSVERIFY
#      value: "false"
#    - name: PATH_CONTEXT
#      value: $(params.PATH_CONTEXT)
#    - name: VERSION
#      value: $(params.VERSION)
#    runAfter:
#    - fetch-repository
#    taskRef:
#      kind: ClusterTask
#      name: s2i-nodejs
#    workspaces:
#    - name: source
#      workspace: workspace
  - name: build
    params:
    - name: TLSVERIFY
      value: "false"
    - name: STORAGE_DRIVER
      value: $(params.STORAGE_DRIVER)
    - name: app-dir
      value: $(params.PATH_CONTEXT)
    runAfter:
    - fetch-repository
    taskRef:
      kind: Task
      name: build
    workspaces:
    - name: resources
      workspace: workspace
    - name: files
      workspace: files
##------------------------------------------------------------------
# Perform image build check
##------------------------------------------------------------------
  - name: image-build-check
    params:
    - name: acs_central_endpoint
      value: $(params.acs_central_endpoint)
    - name: acs_api_token
      value: $(params.acs_api_token)
    - name: public-url
      value: $(params.IMAGE_NAME)
    - name: roxctl-output-format
      value: $(params.roxctl-output-format)
    taskRef:
      kind: Task
      name: acs-image-build-check
    runAfter:
    - build
  workspaces:
  - name: workspace
  - name: files
