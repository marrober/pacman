apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-image-to-quay
spec:
  params:
    - name: quay-io-account
      description: The quay.io account that matches the credentials stored in the mounted secret.
      type: string
      default: ""
    - name: quay-io-repository
      description: The quay.io repository in which to store the image.
      type: string
      default: ""
    - name: image-stream-location
      type: string
      default: ""
      description: The full image url in the OpenShift image stream
    - name: STORAGE_DRIVER
      description: The Buildah storage STORAGE_DRIVER
      type: string
    - name: imageTag
      type: string
  results:
    - name: quay-image-repo-location
    - name: BASE_IMAGES_DIGESTS
  steps:
    - name: buildah-pull-image
      command:
        - buildah
        - pull
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--root'
        - '/files/buildah-containers'
        - $(params.image-stream-location):$(params.imageTag)
      image: image-registry.openshift-image-registry.svc:5000/pacman-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        requests:
          memory: 2Gi
          cpu: '1'
        limits:
          memory: 4Gi
          cpu: '2'
    - name: buildah-tag-image
      command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--root'
        - '/files/buildah-containers'
        - $(params.image-stream-location):$(params.imageTag)
        - quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)
      image: image-registry.openshift-image-registry.svc:5000/pacman-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        requests:
          memory: 2Gi
          cpu: '1'
        limits:
          memory: 4Gi
          cpu: '2'

    - name: push-image-to-quay-prior
      script: |
        buildah images --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' | grep -v quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag) > $(results.BASE_IMAGES_DIGESTS.path)

        buildah images --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' | grep -v quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)

        buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.name"}}'

        base_image_name=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.name"}}' $(results.BASE_IMAGES_DIGESTS.path) | cut -f1 -d'@')

        echo $base_image_name
        
        base_image_digest=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.digest"}}' quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag))

        echo $base_image_digest


      image: image-registry.openshift-image-registry.svc:5000/pacman-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        requests:
          memory: 2Gi
          cpu: '1'
        limits:
          memory: 4Gi
          cpu: '2'
      volumeMounts:
        - name: quay-auth-secret
          mountPath: /etc/secret-volume
          readOnly: true



    - name: push-image-to-quay
      script: |
        buildah images --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' | grep -v quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag) > $(results.BASE_IMAGES_DIGESTS.path)

        buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.name"}}'

        base_image_name=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.name"}}' $(results.BASE_IMAGES_DIGESTS.path) | cut -f1 -d'@')

        echo $base_image_name
        
        base_image_digest=$(buildah inspect --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --format '{{ index .ImageAnnotations "org.opencontainers.image.base.digest"}}' quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag))

        echo $base_image_digest

        container=$(buildah from --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers --pull-never quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)
        buildah copy --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers $container  $(workspaces.resources.path)/sbom-image.json /root/buildinfo/content_manifests/
        buildah config --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers -a org.opencontainers.image.base.name=${base_image_name} -a org.opencontainers.image.base.digest=${base_image_digest} $container
        buildah --storage-driver=$(params.STORAGE_DRIVER) --root /files/buildah-containers commit $container quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)


        buildah push --storage-driver=$(params.STORAGE_DRIVER) --authfile /etc/secret-volume/.dockerconfigjson --root /files/buildah-containers quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag

      image: image-registry.openshift-image-registry.svc:5000/pacman-ci/buildah:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      resources:
        requests:
          memory: 2Gi
          cpu: '1'
        limits:
          memory: 4Gi
          cpu: '2'
      volumeMounts:
        - name: quay-auth-secret
          mountPath: /etc/secret-volume
          readOnly: true
    - name: get-quay-repository-url
      command:
        - /bin/sh
        - '-c'
      args:
        - |-

          echo "quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)" > $(results.quay-image-repo-location.path)

          echo -------------------------------------

          cat $(results.quay-image-repo-location.path)

      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      resources: {}
    - name: upload-sbom
      image: quay.io/redhat-appstudio/cosign:v2.1.1
      args:
        - attach
        - sbom
        - --sbom
        - $(workspaces.resources.path)/sbom-image.json
        - --type
        - cyclonedx
        - quay.io/$(params.quay-io-account)/$(params.quay-io-repository):$(params.imageTag)
      workingDir: $(workspaces.resources.path)
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
  workspaces:
  - name: files
    mountPath: /files
  - name: resources
    mountPath: /resources
